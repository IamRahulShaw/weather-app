{"version":3,"sources":["component/Search.js","component/Display.js","App.js","index.js"],"names":["Search","cityName","setCityName","fetchFucntion","className","type","value","onChange","event","target","name","id","placeholder","autoFocus","autoComplete","onClick","Display","data","useState","Date","date","setDate","useEffect","setInterval","region","country","timeZone","windSpeed","windDirection","pressure","precipitation","humidity","temperature","text","iconLink","toLocaleString","src","App","setData","a","fetch","promise","json","location","tz_id","current","wind_kph","wind_dir","pressure_in","precip_in","temp_c","condition","icon","replace","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.face01c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Search = ({ cityName, setCityName, fetchFucntion }) => {\r\n    const handleButtonClick = () => {\r\n        fetchFucntion();\r\n    }\r\n    return (\r\n        <div className=\"middle\" >\r\n            <input type=\"search\" value={cityName} onChange={(event) => setCityName(event.target.value)} name=\"search\" id=\"search\" placeholder=\"enter city name...\" autoFocus autoComplete=\"off\" />\r\n            <button onClick={handleButtonClick}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Display = ({ data }) => {\r\n    const [date, setDate] = useState(new Date());\r\n    useEffect(() => {\r\n        setInterval(() => setDate(new Date()), 1000);\r\n    }, []);\r\n    \r\n    const {name, region, country, timeZone, windSpeed, windDirection, pressure, precipitation, humidity, temperature, text, iconLink} = data;\r\n    return (\r\n        <div id=\"display\">\r\n            <div id=\"displayUpperPortion\">\r\n                <div id=\"city\">\r\n                    <div id=\"cityUpperPart\">{name}</div>\r\n                    <div id=\"cityLowerPart\">{region}, {country}</div>\r\n                    <div id=\"cityDateAndTime\">{date.toLocaleString('en-IN', { timeZone: timeZone })}</div>\r\n                </div>\r\n                <div id=\"weatherIcon\">\r\n                    <img src={iconLink}/>\r\n                </div>\r\n                <div id=\"temperature\">\r\n                    {temperature}&deg;C <br />\r\n                    <div>{text}</div>\r\n                </div>\r\n            </div>\r\n            <div id=\"displayLowerPortion\">\r\n                <div id=\"windSpeed\" className=\"layout\">\r\n                    <div className=\"dataIcon\">\r\n                        <span className=\"iconify\" data-icon=\"bx:bx-wind\"></span>\r\n                        <br /> <span className=\"caption\">wind speed</span>\r\n                    </div>\r\n                    <div className=\"data\">\r\n                        {windSpeed} Km/H <br />\r\n                        {windDirection}\r\n                    </div>\r\n                </div>\r\n                <div id=\"humidity\" className=\"layout\">\r\n                    <div className=\"dataIcon\">\r\n                        <span className=\"iconify\" data-icon=\"carbon:humidity\"></span>\r\n                        <br /> <span className=\"caption\" id=\"humidityCaption\">humidity</span>\r\n                    </div>\r\n                    <div className=\"data number\" id=\"humidity\">\r\n                        {humidity}\r\n                    </div>\r\n                </div>\r\n                <div id=\"pressure\" className=\"layout\">\r\n                    <div className=\"dataIcon\">\r\n                        <span className=\"iconify\" data-icon=\"carbon:pressure-filled\"></span>\r\n                        <br /> <span className=\"caption\" id=\"pressureCaption\">pressure</span>\r\n                    </div>\r\n                    <div className=\"data number\">\r\n                        {pressure} <span className=\"inch\">(inch)</span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"precipitation\" className=\"layout\">\r\n                    <div className=\"dataIcon\">\r\n                        <span className=\"iconify\" data-icon=\"carbon:accumulation-precipitation\"></span>\r\n                        <br /> <span className=\"caption\">precipitation</span>\r\n                    </div>\r\n                    <div className=\"data number\">\r\n                        {precipitation} <span className=\"inch\">(inch)</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import React, { useState, useEffect } from \"react\";\nimport Search from './component/Search';\nimport Display from './component/Display';\nimport \"./scss/App.css\";\n\nfunction App() {\n    const [cityName, setCityName] = useState(\"Kolkata\");\n    const [data, setData] = useState({});\n    const fetchFucntion = async () => {\n        try {\n            const promise = await fetch(`https://api.weatherapi.com/v1/current.json?key=e60df6e194d5484cbde123139212807&q=${cityName}&aqi=no`)\n            const data = await promise.json();\n            const { name, region, country, tz_id: timeZone } = data.location;\n            const { wind_kph: windSpeed, wind_dir: windDirection, pressure_in: pressure, precip_in: precipitation, humidity } = data.current;\n            const { temp_c: temperature } = data.current;\n            const { text, icon } = data.current.condition;\n            let iconLink = icon.replace(\"64x64\", \"128x128\");\n            iconLink = \"https:\" + iconLink;\n            const ourData = {name, region, country, timeZone, windSpeed, windDirection, pressure, precipitation, humidity, temperature, text, iconLink};\n            setData(ourData);\n            // console.log(ourData);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        fetchFucntion();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (\n        <>\n            <div id=\"app\">\n                <Search cityName={cityName} setCityName={setCityName} fetchFucntion={fetchFucntion} />\n                <Display data={data} />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}